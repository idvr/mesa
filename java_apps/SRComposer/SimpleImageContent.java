/*
		A basic implementation of the JDialog class.
*/

import java.awt.*;
import javax.swing.*;
import java.util.Vector;
import DICOM.*;

public class SimpleImageContent extends javax.swing.JDialog
{
    private java.util.Vector mSectionContentItemVector;
    private java.util.Vector mParentContentItemVector;
    
	public SimpleImageContent(Frame parent)
	{
		super(parent);
		
		// This code is automatically generated by Visual Cafe when you add
		// components to the visual environment. It instantiates and initializes
		// the components. To modify the code, only use code syntax that matches
		// what Visual Cafe can generate, or Visual Cafe may be unable to back
		// parse your Java file into its visual environment.
		//{{INIT_CONTROLS
		getContentPane().setLayout(null);
		setSize(405,305);
		setVisible(false);
		JButton1.setText("Add Section");
		getContentPane().add(JButton1);
		JButton1.setBounds(48,72,122,34);
		JButton2.setText("Commit");
		getContentPane().add(JButton2);
		JButton2.setBounds(192,72,120,32);
		//}}
	
		//{{REGISTER_LISTENERS
		SymMouse aSymMouse = new SymMouse();
		JButton1.addMouseListener(aSymMouse);
		JButton2.addMouseListener(aSymMouse);
		SymAction lSymAction = new SymAction();
		JButton2.addActionListener(lSymAction);
		JButton1.addActionListener(lSymAction);
		//}}
		
		mSectionContentItemVector = new java.util.Vector(1,1);
	}

	public SimpleImageContent()
	{
		this((Frame)null);
	}

	public SimpleImageContent(String sTitle)
	{
		this();
		setTitle(sTitle);
	}

	public void setVisible(boolean b)
	{
		if (b)
			setLocation(50, 50);
		super.setVisible(b);
	}

	static public void main(String args[])
	{
		(new SimpleImageContent()).setVisible(true);
	}

	public void addNotify()
	{
		// Record the size of the window prior to calling parents addNotify.
		Dimension size = getSize();

		super.addNotify();

		if (frameSizeAdjusted)
			return;
		frameSizeAdjusted = true;

		// Adjust size of frame according to the insets
		Insets insets = getInsets();
		setSize(insets.left + insets.right + size.width, insets.top + insets.bottom + size.height);
	}

	// Used by addNotify
	boolean frameSizeAdjusted = false;

	//{{DECLARE_CONTROLS
	javax.swing.JButton JButton1 = new javax.swing.JButton();
	javax.swing.JButton JButton2 = new javax.swing.JButton();
	//}}


	class SymMouse extends java.awt.event.MouseAdapter
	{
		public void mouseClicked(java.awt.event.MouseEvent event)
		{
			Object object = event.getSource();
			if (object == JButton1)
				JButton1_mouseClicked(event);
			else if (object == JButton2)
				JButton2_mouseClicked(event);
		}
	}

	void JButton1_mouseClicked(java.awt.event.MouseEvent event)
	{
		// to do: code goes here.
	}
	public void setParentVector(java.util.Vector v) {
	    mParentContentItemVector = v;
	}
	public void commitAction( ) {
	    int i = 0;
	    System.out.println("Simple Image Content: Vector size = " +
	        mSectionContentItemVector.size());
	        
	    for (i = 0; i < mSectionContentItemVector.size(); i++) {
	        DICOM.SR.ContentItem item =
	            (DICOM.SR.ContentItem)mSectionContentItemVector.elementAt(i);
	        mParentContentItemVector.addElement(item);
	    }
	    dispose();
	}

	void JButton2_mouseClicked(java.awt.event.MouseEvent event)
	{
		// to do: code goes here.
	}

	class SymAction implements java.awt.event.ActionListener
	{
		public void actionPerformed(java.awt.event.ActionEvent event)
		{
			Object object = event.getSource();
			if (object == JButton2)
				JButton2_actionPerformed(event);
			else if (object == JButton1)
				JButton1_actionPerformed(event);
		}
	}

	void JButton2_actionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
			 
		JButton2_actionPerformed_Interaction1(event);
	}

	void JButton2_actionPerformed_Interaction1(java.awt.event.ActionEvent event)
	{
		try {
			this.commitAction();
		} catch (java.lang.Exception e) {
		}
	}

	void JButton1_actionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
			 
		JButton1_actionPerformed_Interaction1(event);
	}

	void JButton1_actionPerformed_Interaction1(java.awt.event.ActionEvent event)
	{
		try {
			// SimpleImageSection Create with title, show as non-modal
			{
				SimpleImageSection SimpleImageSection1 = new SimpleImageSection();
				SimpleImageSection1.setModal(false);
				SimpleImageSection1.setTitle("Simple Image Section");
				SimpleImageSection1.show();
				SimpleImageSection1.loadSectionHeading();
				SimpleImageSection1.setParentContentItemVector(mSectionContentItemVector);
			}
		} catch (java.lang.Exception e) {
		}
	}
}